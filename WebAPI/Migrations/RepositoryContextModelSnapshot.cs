// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.SomeFeatureDetailEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("SomeFeatureEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SomeFeatureEntityId");

                    b.ToTable("SomeFeatureDetailEntities");
                });

            modelBuilder.Entity("Entities.Models.SomeFeatureEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("SomeFeatureEntity");
                });

            modelBuilder.Entity("Entities.Models.SomeFeatureDetailEntity", b =>
                {
                    b.HasOne("Entities.Models.SomeFeatureEntity", "SomeFeatureEntity")
                        .WithMany("SomeFeatureDetailEntities")
                        .HasForeignKey("SomeFeatureEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SomeFeatureEntity");
                });

            modelBuilder.Entity("Entities.Models.SomeFeatureEntity", b =>
                {
                    b.Navigation("SomeFeatureDetailEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
